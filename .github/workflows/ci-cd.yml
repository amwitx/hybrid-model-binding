name: CI/CD
on: push
jobs:
  build:
    env:
      is_master_branch: ${{github.ref == 'refs/heads/master'}}
      is_release_branch: ${{startsWith(github.ref, 'refs/heads/release') == true}}
      is_tag: ${{startsWith(github.ref, 'refs/tags') == true}}
    runs-on: windows-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.100'
      - name: Generate build-number
        uses: einaregilsson/build-number@v2
        with:
          token: ${{secrets.GITHUB_TOKEN}}
      - name: Setup version information
        id: version
        run: |
          echo "::set-output name=prefix::$(type version.txt)"
          echo "::set-output name=suffix::$(if ($env:is_tag -ne 'true') {$(if ($env:is_master_branch -eq 'true') {'alpha'} else {$(if ($env:is_release_branch -eq 'true') {'beta'} else {'build'})})+$env:BUILD_NUMBER} else {})"
      - name: Build project
        run: dotnet build -c Release -f netstandard2.0 -p:VersionPrefix=${{steps.version.outputs.prefix}} -p:VersionSuffix=${{steps.version.outputs.suffix}} -o bin/ src/HybridModelBinding
      - name: Create NuGet-package
        run: dotnet pack --no-build -p:VersionPrefix=${{steps.version.outputs.prefix}} -p:VersionSuffix=${{steps.version.outputs.suffix}} -p:OutputPath=../../bin/ src/HybridModelBinding
      - name: Find NuGet package-name and make available to subsequent steps
        id: nuget
        run: echo "::set-output name=package_name::$(ls bin/*.nupkg | select -expandproperty name)"
      - name: Upload NuGet-package artifact
        uses: actions/upload-artifact@v1
        with:
          name: package
          path: bin/${{steps.nuget.outputs.package_name}}
#      - name: Publish NuGet-package
#        if: env.is_master_branch == 'true' || env.is_release_branch == 'true' || env.is_tag == 'true'
#        run: dotnet nuget push -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_TOKEN}} -n true bin\*.nupkg